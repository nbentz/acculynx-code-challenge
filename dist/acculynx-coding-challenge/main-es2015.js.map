{"version":3,"sources":["webpack:///./src/app/app.component.html","webpack:///./src/app/questions/questions.component.html","webpack:///./src/app/questions/results-dialog/results-dialog.component.html","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/questions/questions.component.css","webpack:///./src/app/questions/questions.component.ts","webpack:///./src/app/questions/questions.service.ts","webpack:///./src/app/questions/results-dialog/results-dialog.component.css","webpack:///./src/app/questions/results-dialog/results-dialog.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"wrapper\\\">\\n  <div>\\n    <h3 class='question-header3'>Recent Questions</h3>\\n    <app-questions title=\\\"Recent Questions\\\" type=\\\"normal\\\"></app-questions>\\n  </div>\\n  <div>\\n    <h3 class='question-header3'>Recently Guessed Questions</h3>\\n    <app-questions title=\\\"Recently Guessed Questions\\\" type=\\\"guessed\\\"></app-questions>\\n  </div>\\n</div>\\n\"","module.exports = \"<mat-accordion *ngIf=\\\"questionsService.questions && this.type==='normal'\\\">\\r\\n  <mat-expansion-panel *ngFor=\\\"let question of questionsService.questions;  let lastItem = last\\\">\\r\\n    <mat-expansion-panel-header>\\r\\n      <mat-panel-title >\\r\\n        <h3 innerHtml=\\\"{{question.title}}\\\"></h3>\\r\\n      </mat-panel-title>\\r\\n    </mat-expansion-panel-header>\\r\\n    <div innerHtml=\\\"{{question.body}}\\\"></div>\\r\\n    <mat-divider *ngIf='!lastItem'></mat-divider>\\r\\n    <div *ngFor=\\\"let answer of question.answers\\\">\\r\\n      <mat-card class=\\\"answer\\\" [ngClass]=\\\"{'answer' : !show, 'correct' : show && answer.is_accepted, 'incorrect' : show && !answer.is_accepted}\\\" (click)=\\\"scorePointsAndUpdate(question, answer)\\\" matTooltip=\\\"Click to guess this as the accepted answer.\\\" matTooltipPosition=\\\"before\\\">\\r\\n        <mat-card-title>Answer:</mat-card-title>\\r\\n        <mat-card-content>\\r\\n          <h2 class='blue' *ngIf='showGuesses'>Guess Count: {{answer.guess_count}}</h2>\\r\\n          <div innerHtml=\\\"{{answer.body}}\\\"></div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </mat-expansion-panel>\\r\\n</mat-accordion>\\r\\n\\r\\n<mat-accordion *ngIf=\\\"questionsService.guessedQuestions && this.type==='guessed'\\\" >\\r\\n  <mat-expansion-panel *ngFor=\\\"let guessedQuestion of questionsService.guessedQuestions; let i = index; let lastItem = last\\\">\\r\\n    <mat-expansion-panel-header *ngIf=\\\"i<10\\\">\\r\\n      <mat-panel-title >\\r\\n        <h3 innerHtml=\\\"{{guessedQuestion.title}}\\\"></h3>\\r\\n      </mat-panel-title>\\r\\n    </mat-expansion-panel-header>\\r\\n    <div innerHtml=\\\"{{guessedQuestion.body}}\\\"></div>\\r\\n    <mat-divider *ngIf='!lastItem'></mat-divider>\\r\\n    <div *ngFor=\\\"let answer of guessedQuestion.answers\\\">\\r\\n      <mat-card [ngClass]=\\\"{'answer' : !show, 'correct' : show && answer.is_accepted, 'incorrect' : show && !answer.is_accepted}\\\" (click)=\\\"scorePointsAndUpdate(guessedQuestion, answer)\\\" matTooltip=\\\"Click to guess this as the accepted answer.\\\" matTooltipPosition=\\\"before\\\">\\r\\n        <mat-card-title>Answer:</mat-card-title>\\r\\n        <mat-card-content>\\r\\n          <h2 class='blue' *ngIf='showGuesses'>Guess Count: {{answer.guess_count}}</h2>\\r\\n          <div innerHtml=\\\"{{answer.body}}\\\"></div>\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </mat-expansion-panel>\\r\\n</mat-accordion>\\r\\n\"","module.exports = \"<h1 mat-dialog-title>{{title}}!</h1>\\n<mat-dialog-content>\\n  <p>Guess Count for this answer: {{data.guess_count}} ({{guessScore}})</p>\\n  <p>Number of Votes: {{data.score}} ({{scoreScore}})</p>\\n  <p>Correct/Incorrect score: {{title}} ({{correctScore}})</p>\\n  <p>Total: {{score}}</p>\\n  <h1>Total Score: {{data.totalScore + score}}</h1>\\n</mat-dialog-content>\\n<mat-dialog-actions class='dialog-button-wrapper'>\\n  <div></div>\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"closeDialog()\\\">Okay</button>\\n</mat-dialog-actions>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".wrapper {\\r\\n  display: grid;\\r\\n  grid-template-columns: 50% 50%;\\r\\n  grid-gap: 1em;\\r\\n  margin: 5em;\\r\\n}\\r\\n\\r\\n.question-header3, mat-dialog-container {\\r\\n  font-family: 'Roboto','Helvetica Neue', sans-serif;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsOEJBQThCO0VBQzlCLGFBQWE7RUFDYixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxrREFBa0Q7QUFDcEQiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi53cmFwcGVyIHtcclxuICBkaXNwbGF5OiBncmlkO1xyXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNTAlIDUwJTtcclxuICBncmlkLWdhcDogMWVtO1xyXG4gIG1hcmdpbjogNWVtO1xyXG59XHJcblxyXG4ucXVlc3Rpb24taGVhZGVyMywgbWF0LWRpYWxvZy1jb250YWluZXIge1xyXG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywnSGVsdmV0aWNhIE5ldWUnLCBzYW5zLXNlcmlmO1xyXG59XHJcblxyXG5cclxuIl19 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'acculynx-coding-challenge';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule, MatExpansionModule } from '@angular/material/';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { QuestionsComponent } from './questions/questions.component';\nimport { QuestionsService } from './questions/questions.service';\nimport { ResultsDialogComponent } from './questions/results-dialog/results-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuestionsComponent,\n    ResultsDialogComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatExpansionModule,\n    MatDividerModule,\n    MatCardModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatTableModule,\n    MatButtonModule\n  ],\n  entryComponents : [ResultsDialogComponent],\n  providers: [QuestionsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"mat-expansion-panel, mat-card-content {\\r\\n  margin-bottom: 0.1rem;\\r\\n}\\r\\n\\r\\n.answer {\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\n.answer:hover {\\r\\n  background-color: rgba(200,200,200,.75);\\r\\n}\\r\\n\\r\\n.answer:active {\\r\\n  background-color: rgba(0,0,0, .45);\\r\\n  transition: 0.1s;\\r\\n}\\r\\n\\r\\n.answer, .correct, .incorrect {\\r\\n  transition: 0.3s;\\r\\n  margin-bottom: 1em;\\r\\n}\\r\\n\\r\\n.correct {\\r\\n  background-color: #9bff8c;\\r\\n}\\r\\n\\r\\n.incorrect {\\r\\n  background-color: #ff8c8c;\\r\\n}\\r\\n\\r\\n.blue {\\r\\n  color: #006084;\\r\\n  transition: 0.3s;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcXVlc3Rpb25zL3F1ZXN0aW9ucy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsdUJBQXVCO0FBQ3pCOztBQUNBO0VBQ0UsdUNBQXVDO0FBQ3pDOztBQUVBO0VBQ0Usa0NBQWtDO0VBQ2xDLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixrQkFBa0I7QUFDcEI7O0FBQ0E7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvcXVlc3Rpb25zL3F1ZXN0aW9ucy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWV4cGFuc2lvbi1wYW5lbCwgbWF0LWNhcmQtY29udGVudCB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMC4xcmVtO1xyXG59XHJcblxyXG4uYW5zd2VyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxufVxyXG4uYW5zd2VyOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIwMCwyMDAsMjAwLC43NSk7XHJcbn1cclxuXHJcbi5hbnN3ZXI6YWN0aXZlIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLCAuNDUpO1xyXG4gIHRyYW5zaXRpb246IDAuMXM7XHJcbn1cclxuXHJcbi5hbnN3ZXIsIC5jb3JyZWN0LCAuaW5jb3JyZWN0IHtcclxuICB0cmFuc2l0aW9uOiAwLjNzO1xyXG4gIG1hcmdpbi1ib3R0b206IDFlbTtcclxufVxyXG4uY29ycmVjdCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzliZmY4YztcclxufVxyXG5cclxuLmluY29ycmVjdCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmOGM4YztcclxufVxyXG5cclxuLmJsdWUge1xyXG4gIGNvbG9yOiAjMDA2MDg0O1xyXG4gIHRyYW5zaXRpb246IDAuM3M7XHJcbn1cclxuIl19 */\"","import { Component, OnInit, Input} from '@angular/core';\r\nimport { QuestionsService } from './questions.service';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport { ResultsDialogComponent } from './results-dialog/results-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-questions',\r\n  templateUrl: './questions.component.html',\r\n  styleUrls: ['./questions.component.css']\r\n})\r\nexport class QuestionsComponent implements OnInit{\r\n\r\n  @Input() type: string;\r\n  @Input() title: string;\r\n  show = false;\r\n  showGuesses = false;\r\n  questions = [];\r\n  guessedQuestions = [];\r\n  constructor( public questionsService: QuestionsService, public dialog: MatDialog ) {}\r\n\r\n  // dialog box opened when clicking an answer\r\n  openDialog(question): void {\r\n    const dialogRef = this.dialog.open(ResultsDialogComponent, {\r\n      data: question\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      this.show = false;\r\n      this.showGuesses = false;\r\n      this.questionsService.score += result.totalScore;\r\n    });\r\n  }\r\n\r\n  // gets the most recent questions & answers\r\n  getAllQuestions() {\r\n    this.questionsService.getAllQuestions();\r\n  }\r\n\r\n  // scores points, appends answer with timestamp and guesscount, opens dialog.\r\n  scorePointsAndUpdate(question, answer) {\r\n    this.questions = this.questionsService.questions;\r\n    !answer.guess_count ? answer.guess_count = 1 : answer.guess_count += 1;\r\n\r\n    const indexAnswer = question.answers.findIndex(x => x.answer_id === answer.answer_id);\r\n    question.answers[indexAnswer] = answer;\r\n    question.timeStamp = new Date().getTime();\r\n\r\n    const indexQuestion = this.questions.findIndex(x => x.question_id === question.question_id);\r\n    this.questions[indexQuestion] = question;\r\n\r\n    this.guessedQuestions = this.questionsService.guessedQuestions;\r\n    const indexGuessedQuestion = this.guessedQuestions.findIndex( x => x.question_id === question.question_id);\r\n    indexGuessedQuestion >= 0\r\n      ? this.guessedQuestions[indexGuessedQuestion] = question\r\n      : this.guessedQuestions = [question, ...this.guessedQuestions];\r\n\r\n    this.questionsService.guessedQuestions = this.guessedQuestions;\r\n    this.questionsService.updateQuestion(question);\r\n    this.questionsService.questions = this.questions;\r\n    this.show = true;\r\n    this.showGuesses = true;\r\n    this.openDialog({\r\n      score: answer.score,\r\n      guess_count: answer.guess_count,\r\n      is_accepted: answer.is_accepted,\r\n      totalScore : this.questionsService.score\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAllQuestions();\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { forkJoin } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuestionsService {\r\n\r\n\r\n  constructor( private http: HttpClient) { }\r\n\r\n  private baseUrl = 'https://localhost:3000/';\r\n  public score = 0;\r\n  public questions = [];\r\n  public guessedQuestions = [];\r\n\r\n  /* retrieves a list of questions from stackexchange api and a list of recently guessed questions from MongoDB db\r\n  *  Each lists answers array gets shuffled.\r\n  */\r\n  public getAllQuestions() {\r\n    const questionsResult = this.http.get<any>(\r\n      `https://api.stackexchange.com/2.2/search/advanced?pagesize=10&order=desc&sort=creation&accepted=True&answers=2&site=stackoverflow&filter=!)rh-4Rv3X0MXqJcCydZX`\r\n    );\r\n    const guessedQuestionsResult = this.http.get<any>(`/questions/guessed`);\r\n    forkJoin([questionsResult, guessedQuestionsResult]).subscribe( results => {\r\n      this.questions = results[0].items;\r\n      this.questions = this.shuffleNestedArrays(this.questions);\r\n      // let qArr = results[0].items.$.questions;\r\n      // qArr = this.shuffle(qArr);\r\n      this.guessedQuestions = results[1];\r\n      this.guessedQuestions = this.shuffleNestedArrays(this.guessedQuestions);\r\n      this.updateLocalQuestions();\r\n      return results;\r\n    });\r\n  }\r\n\r\n  // updates a question with current question values.\r\n  public updateQuestion(question) {\r\n    return this.http.patch<any>(`/questions/update`, question).subscribe( data => {});\r\n  }\r\n\r\n  // updates local questions array with current question values.\r\n  private updateLocalQuestions() {\r\n    this.guessedQuestions.forEach( g => {\r\n      this.questions.forEach(q => {\r\n        if (q.question_id === g.question_id) {\r\n          const index = this.questions.findIndex(x => x.question_id === g.question_id);\r\n          this.questions[index] = g;\r\n        }\r\n      });\r\n    });\r\n    return;\r\n  }\r\n\r\n  // Shuffles child array in each parent array\r\n  private shuffleNestedArrays(array) {\r\n    array.forEach( (x, i) => {\r\n      array[i].answers = this.shuffle(array[i].answers);\r\n    });\r\n    return array;\r\n  }\r\n\r\n  // shuffles items in array.\r\n  private shuffle(array) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      let j = Math.floor(Math.random() * (i + 1)); // random index from 0 to i\r\n      [array[i], array[j]] = [array[j], array[i]]; // swap elements\r\n    }\r\n    return array;\r\n  }\r\n\r\n}\r\n","module.exports = \"mat-dialog-content {\\r\\n  text-align: right;\\r\\n  font-family: 'Roboto','Helvetica Neue', sans-serif;\\r\\n}\\r\\n\\r\\nh1 {\\r\\n  text-align: center;\\r\\n  font-family: 'Roboto','Helvetica Neue', sans-serif;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n.dialog-button-wrapper {\\r\\n  display: grid;\\r\\n  grid-template-columns: 80% 20%;\\r\\n  margin-right: 1em;\\r\\n  margin-bottom: 0.25em;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\nmat-dialog-container {\\r\\n  font-family: 'Roboto','Helvetica Neue', sans-serif;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcXVlc3Rpb25zL3Jlc3VsdHMtZGlhbG9nL3Jlc3VsdHMtZGlhbG9nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBaUI7RUFDakIsa0RBQWtEO0FBQ3BEOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGtEQUFrRDtBQUNwRDs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGFBQWE7RUFDYiw4QkFBOEI7RUFDOUIsaUJBQWlCO0VBQ2pCLHFCQUFxQjtFQUNyQixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxrREFBa0Q7QUFDcEQiLCJmaWxlIjoic3JjL2FwcC9xdWVzdGlvbnMvcmVzdWx0cy1kaWFsb2cvcmVzdWx0cy1kaWFsb2cuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1kaWFsb2ctY29udGVudCB7XHJcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCdIZWx2ZXRpY2EgTmV1ZScsIHNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbmgxIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCdIZWx2ZXRpY2EgTmV1ZScsIHNhbnMtc2VyaWY7XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG59XHJcblxyXG4uZGlhbG9nLWJ1dHRvbi13cmFwcGVyIHtcclxuICBkaXNwbGF5OiBncmlkO1xyXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogODAlIDIwJTtcclxuICBtYXJnaW4tcmlnaHQ6IDFlbTtcclxuICBtYXJnaW4tYm90dG9tOiAwLjI1ZW07XHJcbiAgcGFkZGluZzogMDtcclxufVxyXG5cclxubWF0LWRpYWxvZy1jb250YWluZXIge1xyXG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywnSGVsdmV0aWNhIE5ldWUnLCBzYW5zLXNlcmlmO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-results-dialog',\n  templateUrl: './results-dialog.component.html',\n  styleUrls: ['./results-dialog.component.css']\n})\nexport class ResultsDialogComponent implements OnInit {\n  public title: string;\n  public score: number;\n  public correctScore: string;\n  public guessScore: string;\n  public scoreScore: string;\n  public totalScore: number;\n  constructor( public dialogRef: MatDialogRef<ResultsDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  // formats the data to display score\n  formatData() {\n    let score = 0;\n    let correctScore = '';\n    let guessScore = '';\n    let scoreScore = '';\n    this.totalScore = this.data.totalScore;\n    this.data.is_accepted ? this.title = 'Correct' : this.title = 'Incorrect';\n    if (this.data.is_accepted) {\n      this.title = 'Correct';\n      score += 5;\n      correctScore = '+5';\n    } else {\n      this.title = 'Incorrect';\n      score -= 10;\n      correctScore = '-10';\n    }\n    if (this.data.score < 0) {\n      score--;\n      scoreScore = '-1';\n    } else if (this.data.score > 0 && this.data.score < 10) {\n      score++;\n      scoreScore = '+1';\n    } else {\n      score += 5;\n      scoreScore = '+5';\n    }\n\n    if (this.data.guess_count < 5) {\n      score += 1;\n      guessScore = '+1';\n    } else if (this.data.guess_count >= 5 && this.data.guess_count < 10) {\n      score += 2;\n      guessScore = '+2';\n    } else {\n      score += 5;\n      guessScore = '+5';\n    }\n    this.score = score;\n    this.correctScore = correctScore;\n    this.scoreScore = scoreScore;\n    this.guessScore = guessScore;\n    this.totalScore += this.score;\n  }\n\n  // closes dialog and sends the current totalscore.\n  closeDialog() {\n    this.dialogRef.close({totalScore : this.totalScore});\n  }\n\n  ngOnInit() {\n    this.formatData();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}